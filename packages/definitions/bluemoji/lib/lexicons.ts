/* eslint-disable */
// This file is automatically generated, do not edit!

/**
 * @module
 * Contains type declarations for WhiteWind lexicons
 */

import '@atcute/client/lexicons';

declare module '@atcute/client/lexicons' {
	namespace BlueMojiCollectionItem {
		interface Record {
			createdAt: string;
			/** Open union to allow for future formats */
			formats: Brand.Union<Formats_v0>;
			/** Should be in the format :emoji: */
			name: string;
			/** @default false */
			adultOnly?: boolean;
			alt?: string;
			copyOf?: At.Uri;
			/** Self-label values for this emoji. Effectively content warnings. */
			labels?: Brand.Union<ComAtprotoLabelDefs.SelfLabels>;
		}
		/** Limiting blobs to 256kb because there may be many on page and these get optimised by ImgProxy anyway */
		type Blob_v0 = At.Blob;
		/** 64kb should be enough for anybody */
		type Bytes_v0 = At.Bytes;
		interface Formats_v0 {
			[Brand.Type]?: 'blue.moji.collection.item#formats_v0';
			apng_128?: Bytes_v0;
			gif_128?: Blob_v0;
			lottie?: Bytes_v0;
			original?: At.Blob;
			png_128?: Blob_v0;
			webp_128?: Blob_v0;
		}
	}

	namespace BlueMojiRichtextFacet {
		interface Main {
			[Brand.Type]?: 'blue.moji.richtext.facet';
			/** DID of the user posting the Bluemoji */
			did: string;
			formats: Brand.Union<Formats_v0>;
			/** Name of the Bluemoji in :emoji: format */
			name: string;
			/** @default false */
			adultOnly?: boolean;
			alt?: string;
			/** Self-label values for this emoji. Effectively content warnings. */
			labels?: Brand.Union<ComAtprotoLabelDefs.SelfLabels>;
		}
		/** On the facet, only the CID is provided as this can be combined with the DID to create CDN URLs for non-animated blobs. For APNG and dotLottie, raw Bytes are served and require a com.atproto.repo.getRecord roundtrip on render so are marked with a boolean */
		interface Formats_v0 {
			[Brand.Type]?: 'blue.moji.richtext.facet#formats_v0';
			/** @default false */
			apng_128?: boolean;
			gif_128?: At.CID;
			/** @default false */
			lottie?: boolean;
			png_128?: At.CID;
			webp_128?: At.CID;
		}
	}

	interface Records {
		'blue.moji.collection.item': BlueMojiCollectionItem.Record;
	}

	interface Queries {}

	interface Procedures {}
}
