/* eslint-disable */
// This file is automatically generated, do not edit!

/**
 * @module
 * Contains type declarations for WhiteWind lexicons
 */

import '@atcute/client/lexicons';

declare module '@atcute/client/lexicons' {
	namespace ComWhtwndBlogComment {
		/** A declaration of a comment. */
		interface Record {
			$type: 'com.whtwnd.blog.comment';
			/** Maximum string length: 1000 */
			content: string;
			entryUri: At.Uri;
		}
	}

	namespace ComWhtwndBlogDefs {
		interface BlobMetadata {
			[Brand.Type]?: 'com.whtwnd.blog.defs#blobMetadata';
			blobref: At.Blob;
			name?: string;
		}
		interface BlogEntry {
			[Brand.Type]?: 'com.whtwnd.blog.defs#blogEntry';
			/** Maximum string length: 100000 */
			content: string;
			createdAt?: string;
		}
		interface Comment {
			[Brand.Type]?: 'com.whtwnd.blog.defs#comment';
			/** Maximum string length: 1000 */
			content: string;
			entryUri: At.Uri;
		}
		interface Ogp {
			[Brand.Type]?: 'com.whtwnd.blog.defs#ogp';
			url: string;
			height?: number;
			width?: number;
		}
	}

	namespace ComWhtwndBlogEntry {
		/** A declaration of a post. */
		interface Record {
			$type: 'com.whtwnd.blog.entry';
			/** Maximum string length: 100000 */
			content: string;
			blobs?: ComWhtwndBlogDefs.BlobMetadata[];
			createdAt?: string;
			/** (DEPRECATED) Marks this entry as draft to tell AppViews not to show it to anyone except for the author */
			isDraft?: boolean;
			ogp?: ComWhtwndBlogDefs.Ogp;
			theme?: 'github-light';
			/** Maximum string length: 1000 */
			title?: string;
			/**
			 * Tells the visibility of the article to AppView.
			 * @default "public"
			 */
			visibility?: 'public' | 'url' | 'author';
		}
	}

	/** Get blog posts associated to designated author. */
	namespace ComWhtwndBlogGetAuthorPosts {
		interface Params {
			author: At.DID;
		}
		type Input = undefined;
		interface Output {
			post: ComWhtwndBlogDefs.BlogEntry[];
		}
	}

	/** Get AT URI by blog author and entry name. If there are multiple blog entries associated with the name, return the latest one. */
	namespace ComWhtwndBlogGetEntryMetadataByName {
		interface Params {
			author: string;
			entryTitle: string;
		}
		type Input = undefined;
		interface Output {
			entryUri: At.Uri;
			cid?: At.CID;
			lastUpdate?: string;
		}
		interface Errors {
			NotFound: {};
		}
	}

	/** Get comments associated to designated post. */
	namespace ComWhtwndBlogGetMentionsByEntry {
		interface Params {
			postUri: At.Uri;
		}
		type Input = undefined;
		interface Output {
			mentions: At.Uri[];
		}
	}

	/** Notify AppView of existence of new entry and request indexing */
	namespace ComWhtwndBlogNotifyOfNewEntry {
		interface Params {}
		interface Input {
			entryUri: At.Uri;
		}
		interface Output {}
		interface Errors {}
	}

	interface Records {
		'com.whtwnd.blog.comment': ComWhtwndBlogComment.Record;
		'com.whtwnd.blog.entry': ComWhtwndBlogEntry.Record;
	}

	interface Queries {
		'com.whtwnd.blog.getAuthorPosts': {
			params: ComWhtwndBlogGetAuthorPosts.Params;
			output: ComWhtwndBlogGetAuthorPosts.Output;
		};
		'com.whtwnd.blog.getEntryMetadataByName': {
			params: ComWhtwndBlogGetEntryMetadataByName.Params;
			output: ComWhtwndBlogGetEntryMetadataByName.Output;
		};
		'com.whtwnd.blog.getMentionsByEntry': {
			params: ComWhtwndBlogGetMentionsByEntry.Params;
			output: ComWhtwndBlogGetMentionsByEntry.Output;
		};
	}

	interface Procedures {
		'com.whtwnd.blog.notifyOfNewEntry': {
			input: ComWhtwndBlogNotifyOfNewEntry.Input;
			output: ComWhtwndBlogNotifyOfNewEntry.Output;
		};
	}
}
